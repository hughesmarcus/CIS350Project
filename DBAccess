package org.eclipse.wb.swing;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;

public class DBAccess 
{
	private final String url = "jdbc:mysql://localhost:3306/"; 
	private final String dbName = "illnessdb";
	private final String driver = "com.mysql.jdbc.Driver";
	private final int portNumber = 3306;
	private final String dbms = "mysql";
	private final String serverName = "localhost";
	private final String userName = "vincensi"; 
	private final String password = "Cis350";
	
	private final String illTable = "illness";
	private final String userTable = "users";
	
	public DBAccess()
	{
		
	}
	
	/**
	 * Method checks to find if the username and password combination are in the users table.
	 * returns P if the user is a patient, D if the user is a doctor, or an empty string if 
	 * the U/P combination is not found.
	 * @param user
	 * @param pass
	 * @return ret
	 */
	public String login(String user, String pass)
	{
		user = user.toLowerCase();
		
		String ret = "";
		try 
		{ 
			Class.forName(driver).newInstance(); 
			Connection conn = DriverManager.getConnection(url+dbName,userName,password); 
			//processing
			//gets the table of values
			Statement st = conn.createStatement();
			//use executeQuery to run a query
			ResultSet res = st.executeQuery("SELECT * FROM users"); 
			while (res.next()) 
			{
				//use getString on the result of the query
				String userName = res.getString("username"); 
				userName = userName.toLowerCase();
				String password = res.getString("password");
				if(user.equals(userName) && pass.equals(password))
				{
					ret = res.getString("type");
				}
				else
				{
					//username and password not found
				}
			} 
			conn.close(); 
		} catch (Exception e) 
		{
			e.printStackTrace(); 
		}
		return ret;
	}
	
	/**
	 * Searches the illness table for illnesses with the given symptom and returns
	 * and arraylist of all the illnesses with that symptom
	 * @param symptom
	 * @return illness
	 */
	public ArrayList<String> sympSearch(String symptom)
	{
		ArrayList<String> illness;
		
		return illness;
	}
	
	/**
	 * Searches the illness table for an illness and returns an arraylist of
	 * the symptoms associated with that illness.
	 * @param ill
	 * @return symps
	 */
	public ArrayList<String> illSearch(String ill)
	{
		ArrayList<String> symps;
		
		return symps;
	}
	
	/**
	 * Attempts to add the illness with the given name and symptoms to the illness table
	 * returns true if it was successfully added and false if it was not added
	 * @param ill
	 * @param symps
	 * @return added
	 */
	public boolean addIll(String ill, ArrayList<String> symps)
	{
		boolean added = false;
		
		return added;
	}
	
	/**
	 * returns all the illnesses in the illness table
	 * @return ills
	 */
	public ArrayList<String> getIlls()
	{
		ArraysList<String> ills;
		
		return ills;
	}
	
	/**
	 * Searches for the given illness and adds the given symptom to it and returns
	 * true it was successful, otherwise returns false
	 * @param ill
	 * @param symp
	 * @return add
	 */
	public boolean addToIll(String ill, String symp)
	{
		boolean add = false;
		
		return add;
	}
	
	/**
	 * Searches for the given illness and sympton then deletes the symptom, returns
	 * true if successful
	 * @param ill
	 * @param symp
	 * @return del
	 */
	public boolean delSymp(String ill, String symp)
	{
		boolean del = false;
		
		return del;
	}
	
	/**
	 * Searches for the given illness and deletes it from the illness table,
	 * returns true if successful
	 * @param ill
	 * @return del
	 */
	public boolean delIll(String ill)
	{
		boolean del = false;
		
		return del;
	}
}
